apiVersion: apps/v1
kind: Deployment
metadata:
  name: morpheus-feedback-api
  labels:
    app: morpheus-feedback-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: morpheus-feedback-api
  template:
    metadata:
      labels:
        app: morpheus-feedback-api
    spec:
      serviceAccountName: argilla
      imagePullSecrets:
        - name: morpheus-pull-secret
      containers:
        - name: flask-service
          image: quay.io/olavtar/morpheus-feedback-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5001
          env:
            - name: ARGILLA_API_KEY
              value: argilla.apikey
            - name: ARGILLA_API_URL
              value: "http://localhost:6900"   # Internal Argilla endpoint
        - name: argilla-server
          image: argilla/argilla-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6900
          env:
            - name: USERNAME
              value: argilla
            - name: PASSWORD
              value: "12345678"
          envFrom:
            - configMapRef:
                name: argilla-config
        - name: argilla-worker
          image: argilla/argilla-server:latest
          imagePullPolicy: IfNotPresent
          command: ["bash","-c","python -m argilla_server worker --num-workers $BACKGROUND_NUM_WORKERS"]
          envFrom:
            - configMapRef:
                name: argilla-config
          env:
            - name: BACKGROUND_NUM_WORKERS
              value: "2"
        - name: redis
          image: redis:6
          imagePullPolicy: IfNotPresent
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
          imagePullPolicy: IfNotPresent
          env:
            - name: node.name
              value: "elasticsearch"

            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"

            - name: discovery.type
              value: "single-node"

            - name: cluster.name
              value: "es-argilla-local"

            - name: cluster.routing.allocation.disk.threshold_enabled
              value: "false"

            - name: xpack.security.enabled
              value: "false"
        - name: postgresql
          image: postgres:13
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: argilla